#!/bin/bash

echo "Starting deployment automation..."

# Update the apt package
echo "-----------------------------------------------------------------------------------------------------"
echo "Updating apt..."
echo "-----------------------------------------------------------------------------------------------------"
sudo apt update

# Install Java, Maven, and Unzip
echo "-----------------------------------------------------------------------------------------------------"
echo "Installing Java, Maven, and Unzip..."
echo "-----------------------------------------------------------------------------------------------------"
sudo apt install openjdk-17-jre-headless -y && sudo apt install maven -y  && sudo apt install unzip

# Install Tomcat Server
sudo wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.100/bin/apache-tomcat-8.5.100.tar.gz
tar -xvzf apache-tomcat-8.5.100

# Renaming tomcat as tomcat9
mv apache-tomcat-8.5.100 tomcat
rm -rf apache-tomcat-8.5.100.tar.gz

# Install Sonarqube by using wget
echo "-----------------------------------------------------------------------------------------------------"
echo "Installing sonarqube from web..."
echo "-----------------------------------------------------------------------------------------------------"
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.5.0.89998.zip

#Unzipping sonarqube...
echo "-----------------------------------------------------------------------------------------------------"
echo "Unzipping sonarqube..."
echo "-----------------------------------------------------------------------------------------------------"
unzip sonarqube-10.5.0.89998.zip

# Rename sonarqube
echo "-----------------------------------------------------------------------------------------------------"
echo "Renaming sonarqube folder to sonarqube..."
echo "-----------------------------------------------------------------------------------------------------"
mv sonarqube-10.5.0.89998 sonarqube

# Clone the Helloworld Git Repository
echo "-----------------------------------------------------------------------------------------------------"
echo "Cloning helloworld repository from Github..."
echo "-----------------------------------------------------------------------------------------------------"
git clone https://github.com/nikkaalviar/helloworld.git

# Define the project (helloworld) directory
PROJECT_DIRECTORY="/home/ubuntu/helloworld/webapp"

# Define the directory where the built artifact (e.g., WAR file) will be created 
ARTIFACT_DIRECTORY="$PROJECT_DIRECTORY/target"

# Define the name of the built artifact 
ARTIFACT_NAME="webapp.war"

# Define Tomcat's bin directory for starting the server
TOMCAT_DIRECTORY="/home/ubuntu/tomcat/bin"

# Define the directory where Tomcat's webapps are located 
TOMCAT_WEBAPPS_DIRECTORY="/home/ubuntu/tomcat/webapps"

# Define the directory of sonarqube's bin 
SONARQUBE_LINUX_DIRECTORY="/home/ubuntu/sonarqube/bin/linux-x86-64/"

# Starting Tomcat server
echo "-----------------------------------------------------------------------------------------------------"
echo "Starting tomcat server"
echo "-----------------------------------------------------------------------------------------------------"
cd "$TOMCAT_DIRECTORY" || exit
sh startup.sh

# Start an infinite loop to continuously watch for file changes 
# When a change is detected, run maven
echo "-----------------------------------------------------------------------------------------------------"
echo "Change detected. Building the project..."
echo "-----------------------------------------------------------------------------------------------------"
echo "$PROJECT_DIRECTORY"
cd "$PROJECT_DIRECTORY" || exit
mvn clean package

# Check if Maven build is successfull, then copy project's artifact into Tomcat's webapp directory
if [ $? -eq 0 ]; then
  echo "-----------------------------------------------------------------------------------------------------"
  echo "Maven Build is sucessfull. Copying artifact into Tomcat..."
  echo "-----------------------------------------------------------------------------------------------------"
  cd "$TOMCAT_WEBAPPS_DIRECTORY" || exit
  rm -rf webapp*
  echo "-----------------------------------------------------------------------------------------------------"
  cp "$ARTIFACT_DIRECTORY/$ARTIFACT_NAME" "$TOMCAT_WEBAPPS_DIRECTORY"
  echo "-----------------------------------------------------------------------------------------------------"
  echo "Artifact successfully copied..."
  echo "-----------------------------------------------------------------------------------------------------"
else
  echo "-----------------------------------------------------------------------------------------------------"
  echo "Build failed. Please check your code."
  echo "-----------------------------------------------------------------------------------------------------"
fi

# Change into Sonarqube directory to start sonarqube
echo "-----------------------------------------------------------------------------------------------------"
echo "Change directory to sonarqube..."
echo "-----------------------------------------------------------------------------------------------------"
cd "$SONARQUBE_LINUX_DIRECTORY" || exit

echo "-----------------------------------------------------------------------------------------------------"
echo "Starting sonarqube..."
echo "-----------------------------------------------------------------------------------------------------"
sh sonar.sh start

# Required user generated sonarqube token
echo "-----------------------------------------------------------------------------------------------------"
echo "Please input the Sonarqube token..."
echo "-----------------------------------------------------------------------------------------------------"
read SONARQUBE_TOKEN

# Clean and verify the project and sonarqube executes code quality analysis
echo "-----------------------------------------------------------------------------------------------------"
echo "Cleaning and verifying project. Sonarqube scanning for code quality..."
echo "-----------------------------------------------------------------------------------------------------"
cd "$PROJECT_DIRECTORY" || exit
mvn clean verify sonar:sonar -Dsonar.projectKey=helloworld \
                           -Dsonar.projectName="helloworld" \
                           -Dsonar.host.url=http://3.138.170.22:9000 \
                           -Dsonar.token="$SONARQUBE_TOKEN"

# $? holds the exit status of last command
# If last command exit status is successfull...
if [ $? -eq 0 ]; then 
  echo "-----------------------------------------------------------------------------------------------------"
  echo "Build successfull and Sonarqube analysis completed."
  echo "-----------------------------------------------------------------------------------------------------"
else 
  echo "-----------------------------------------------------------------------------------------------------"
  echo "Build failed or errors occured during Sonarqube analysis..."
  echo "-----------------------------------------------------------------------------------------------------"
fi